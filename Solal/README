Si un attribut de méthode est formé de la sorte "type1/type2 nomvariable", la méthode accepte les deux types.

La clef du tournois est 'tournament' en local storage.
Le tournois est formé de la sorte en local storage :
[0] nom du tournois
[1] array contenat les équipes
[2] array des tours

Les équipes sont formées de la sorte en local storage :
[0] nom de l'équipe
[1] niveau moyen
[2] array contenant les joueurs de l'équipe

Les joueurs sont formés de la sorte en local storage :
[0] nom du joueur
[1] niveau du joueur

Par exemple, pour accéder au nom du quatrième joueur de la cinquième équipe (sans passer par les méthodes ci-dessous):
JSON.parse(window.localStorage.getItem('tournament')[1][4][2][3][0]
 - le [1] est l'array contenant les équipes
 - le [4] est l'équipe ayant pour index 4 (la cinquième équipe)
 - le [2] est l'array contenant les joueurs de l'équipe [4]
 - le [3] est l'index du quatrième jouer de l'équipe
 - le [0] est le nom du joueur

tournamentInit(tournamentName) : initialise le tournois avec un nom. Cette méthode est activée par le bouton sont des tests activées par le 'Start Tournois !' dans app.component.html. Sert de base pour les tests.

----------- Methodes pour tournois -----------------
getTournament() : retourne la valeur du tournois "parse".

setTournament(any value) : range value "stringifiée" dans le local storage.

setTournamentName(string tournamentName) : mets tournamentName en place 0 de de tournament en local storage. Sert de nom au tournois.

getTournamentName() : renvoie le nom du tournois.

---------- Methodes gestion équipe ------------------
getTeams() : renvoie l'array qui contient toutes les équipes du tournois.

getTeamNumberByName(string teamN) : renvoie l'index de teamN dans l'array contenant la liste des équipes.

getTeam(string/number teamN) : renvoie l'array correspondant à teamN.

addTeam(string teamName) : crée une équipe et la range avec le nom teamName.

removeTeam(string/number teamN) : supprime l'équipe ayant pour nom/index teamN.

setTeamLevel(string/number teamN, number teamLevel) : attribue teamLevel comme niveau à l'équipe teamN.

---------- Methodes gestion joueur ------------------

getTeamPlayers(string/number teamN) : renvoie l'array contenant les joueurs de l'équipe teamN.

addPlayer(string/number teamN, string playerName, number playerLevel) : ajoute un joueur à l'équipe teamN ayant pour nom playerName et niveau playerLevel. Actualise le niveau moyen de l'équipe.

removePlayer(string/number teamN, string playerName) : supprime le joueur ayant pour nom playerName.


