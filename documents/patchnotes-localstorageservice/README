Si un attribut de méthode est formé de la sorte "type1/type2 nomvariable", la méthode accepte les deux types.

La clef du tournois est 'tournament' en local storage.
Le tournois est formé de la sorte en local storage :
[0] nom du tournois
[1] array contenant les équipes
[2] array des tours

Les équipes sont formées de la sorte en local storage :
[0] nom de l'équipe
[1] niveau moyen
[2] array contenant les joueurs de l'équipe

Les joueurs sont formés de la sorte en local storage :
[0] nom du joueur
[1] niveau du joueur

Par exemple, pour accéder au nom du quatrième joueur de la cinquième équipe (sans passer par les méthodes ci-dessous):
JSON.parse(window.localStorage.getItem('tournament')[1][4][2][3][0]
 - le [1] est l'array contenant les équipes
 - le [4] est l'équipe ayant pour index 4 (la cinquième équipe)
 - le [2] est l'array contenant les joueurs de l'équipe [4]
 - le [3] est l'index du quatrième jouer de l'équipe
 - le [0] est le nom du joueur

tournamentInit(tournamentName) : initialise le tournois avec un nom. Cette méthode est activée par le bouton sont des tests activées par le 'Start Tournois !' dans app.component.html. Sert de base pour les tests.

----------- Methode generale --------------------
errorm1(string message) : renvoie un message d'erreur lorsqu'une méthode renvoie -1.

----------- Methodes pour tournois -----------------
getTournament() : retourne la valeur du tournois "parse".

setTournament(any value) : range value "stringifiée" dans le local storage.

setTournamentName(string tournamentName) : mets tournamentName en place 0 de de tournament en local storage. Sert de nom au tournois.

getTournamentName() : renvoie le nom du tournois.


---------- Methodes gestion équipe ------------------
getTeams() : renvoie l'array qui contient toutes les équipes du tournois.

getTeamNumberByName(string teamN) : renvoie l'index de teamN dans l'array contenant la liste des équipes.

getTeamNumber(string/number teamN) : renvoie l'index de teamN dans l'array contenant la liste des équipes, que teamN soit un string ou un number.

getTeam(string/number teamN) : renvoie l'array correspondant à teamN.

addTeam(string teamName) : crée une équipe et la range avec le nom teamName.

removeTeam(string/number teamN) : supprime l'équipe ayant pour nom/index teamN.

setTeamLevel(string/number teamN, number teamLevel) : attribue teamLevel comme niveau à l'équipe teamN.

suprTeamFromTournament() : supprime une équipe du tournois (ainsi que tous ses matchs passés comme finis). Actualise tous les index des autres équipes.


---------- Methodes gestion joueur ------------------

getTeamPlayers(string/number teamN) : renvoie l'array contenant les joueurs de l'équipe teamN.

addPlayer(string/number teamN, string playerName, number playerLevel) : ajoute un joueur à l'équipe teamN ayant pour nom playerName et niveau playerLevel. Actualise le niveau moyen de l'équipe.

removePlayer(string/number teamN, string playerName) : supprime le joueur ayant pour nom playerName.


---------- Methodes gestion Tour ---------------------
getRounds() : renvoie l'array contenant tous les rounds.

getRoundByNumber() : renvoie le round passé en paramètre.

addRound() : ajoute un round à la suite.

addRoundAutomate() : ajoute un round composé de poule et des équipes de façon prédéfinie. Renvoie true si un round est créer, false sinon.

roundEnded() : renvoie true si le toutes les poules de celui-ci sont terminées.


---------- Methodes gestions Poule ---------------------
getPoolsFromRound(number roundN) : renvoie l'array des poules du tour roundN.

getPoolFromRound(number roundN, number poolN) : renvoie la poule poolN du tour roundN.

addPoolToRound(number roundN) : ajoute une poule à la suite au tour roundN.

addTeamToPool(any teamN, number roundN, number poolN) :  ajoute une équipe à une poule et ajoute les confrontations nouvelles.

poolEnded() : renvoie true si tous les matchs de poolN sont terminés (de la façon définie dans matchEnded() ).

suprTeamFromPool() : supprime teamN d'une poule.

moveTeamFromPool() : déplace une équipe de sa poule initiale vers la poule poolN.


---------- Methode gestion Poule/Match -------------------
matchEnded() : renvoie true si une des deux équipes d'un match a au moins deux sets victorieux et plus de sets victorieux qu'une autre équipe.

getMatchsFromPool() : retourne l'array contenant les matchs d'une poule.

addMatchToPool(number roundN, number poolN, any team1N, any team2N) : ajoute le match team1N vs team2N à la poule poolN du tour roundN.

getMatchNumberFromTeam(any pool, any teamN1, any teamN2) : renvoie l'index du match opposant teamN1 et teamN2 dans pool.

addSetScoreToPool(number roundN, number poolN, any team1N, any team2N, number score1, number score2) : ajoute un set au match team1N vs team2N avec le score.

whoWonMatch(number roundN, number poolN, any team1N, any team2N) : renvoie l'index de l'équipe ayant gagné le match.

whoWonMatchN(): renvoie l'index de l'équipe ayant gagné le match n° matchN de poolN.

teamPlayedWichPool() : renvoie l'index de la poule dans laquelle a joué l'équipe teamN.

teamPlayedWichMatchs() : renvoie l'array contenant les index des matchs de poulN où a joué l'équipe teamN.

calcTeamPoolMatchWin() : renvoie le nombre de victoire de teamN dans poolN.

calcTeamPoolPointsTaken() : revoie le nombre de point encaissé par teamN dans poolN.

calcTeamPoolSetLoss() : renoie le nombre de set perdu par teamN dans poolN.

getResultPool() : renvoie un array composé de la sorte
    - [0] Equipe, [1][0] nb victoire,[1][1] nb set perdu, [1][2] nb point encaissé.

calcQualifiedAUtomate() :renvoie l'array des qualifiés pour le tour suivant de façon prédéfinie.
On considère une équipe qualifiée si elle fait partie de la moitiée supérieure de son classement.






